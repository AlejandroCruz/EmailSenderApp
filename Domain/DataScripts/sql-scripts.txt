# Migration notes and DB scripts.
- [IMPORTANT]: The use of "Business" namign designates the customer part
--# CREATE TABLE [DefaultDevelopment].[dbo].[Orders]
CREATE TABLE [dbo].[Orders](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[OrderNumber] [nvarchar](100) NOT NULL,
	[DocumentNumber] [nvarchar](100) NOT NULL,
	[PayTransNumber] [nvarchar](100) NULL,
	[OrderAmount] [decimal](8, 2) NOT NULL,
	[OrderTax] [decimal](6, 3) NULL,
	[StateCode] [nchar](2) NOT NULL,
	[FreightCode] [nchar](1) NOT NULL,
	[IsRetrieved] [bit] NULL,
	[IsApproved] [bit] NULL,
	[Error] [bit] NULL,
	[TransMessage] [nvarchar](max) NULL,
	[CreatedDate] [datetime2](2) NOT NULL,
	[DateModified] [datetime2](2) NULL,
	[OrderDate] [date] NOT NULL,
	[FreightDate] [date] NOT NULL,
	[FreightStarttime] [time](3) NOT NULL,
	[FreightEndtime] [time](3) NOT NULL,
	[UserName] [nvarchar](100) NOT NULL,
	[UserEmail] [nvarchar](max) NOT NULL,
	[PickupName] [nvarchar](100) NOT NULL,
 CONSTRAINT [PK_Orders] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

--# CREATE TABLE [BusinessDatabase].dbo.BusinessOrder
CREATE TABLE [dbo].[BusinessOrder](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[OrderNumber] [nvarchar](50) NOT NULL,
	[DocumentNumber] [nvarchar](50) NOT NULL,
	[PayTransNumber] [nvarchar](50) NOT NULL,
	[Amount] [decimal](11, 2) NOT NULL,
	[Tax] [decimal](6, 3) NULL,
	[State] [nchar](2) NOT NULL,
	[FreightCode] [nvarchar](50) NOT NULL,
	[IsRetrieved] [nchar](3) NULL,
	[IsApproved] [nchar](3) NULL,
	[OrderDate] [nvarchar](50) NOT NULL,
	[FreightDate] [nvarchar](50) NOT NULL,
	[FreightStarttime] [nvarchar](50) NOT NULL,
	[FreightEndtime] [nvarchar](50) NOT NULL,
	[UserName] [nvarchar](100) NOT NULL,
	[UserEmail] [nvarchar](100) NOT NULL,
	[PickupName] [nvarchar](50) NULL
) ON [PRIMARY]

--# INSERT INTO [BusinessDatabase].[dbo].[BusinessOrder]
INSERT INTO [dbo].[BusinessOrder]
           ([OrderNumber]
           ,[DocumentNumber]
		   ,[PayTransNumber]
           ,[Amount]
           ,[State]
           ,[FreightCode]
		   ,[IsRetrieved]
           ,[OrderDate]
           ,[FreightDate]
           ,[FreightStarttime]
           ,[FreightEndtime]
           ,[UserName]
           ,[UserEmail]
           ,[PickupName])
     VALUES(
			'1001',
			'1001-A',
			' 0987654321 ',
			1.99,
			'PR',
			'R',
			'',
			'6/5/2021',
			'6/10/2021',
			'0800',
			'1000',
			'Bilko Bellington',
			'mail@mail',
			'Polar Bear'
)
GO
-- ('1001', '1001-A', ' 0987654321 ', 1.99, 'PR', 'R', '', '6/5/2021',  '6/10/2021', '0800', '1000', 'Bilko Bellington', 'mail@mail', 'Polar Bear')
-- ('1001', '1001-B', ' 0987654312 ', 10.00, 'PR', 'R', '', '6/5/2021', '6/10/2021', '1100', '1330', 'Bilko Bellington', 'mail@mail', 'Polar Bear')
-- ('1004', '1004-A', ' 0987654123 ', 1000.99, 'fl', 'e', '', '6/22/2021', '6/22/2021', '1000', '1730', 'Mr. Porter', 'mporter@mail', 'Mr. Porter')
-- time	hh:mm:ss[.nnnnnnn]

--# CREATE PROCEDURE [dbo].[spEmailSenderApp_GetSourceData]
DROP PROCEDURE IF EXISTS [dbo].[spEmailSenderApp_GetSourceData]
GO
--
-- Author:		A Cruz
-- Create date: 8/17/2021
-- Description:	Get source data
--
CREATE PROCEDURE [dbo].[spEmailSenderApp_GetSourceData]
AS
DECLARE @r INT = 0;
SET @r = (
	SELECT COUNT(*)
	FROM  dbo.vOrdersNotRetrieved);
IF @r > 0
SET NOCOUNT ON;
BEGIN
	INSERT INTO dbo.Orders
		([OrderNumber]
		,[DocumentNumber]
		,[PayTransNumber]
		,[OrderAmount]
		,[OrderTax]
		,[StateCode]
		,[FreightCode]
		,[IsApproved]
		,[OrderDate]
		,[FreightDate]
		,[FreightStarttime]
		,[FreightEndtime]
		,[UserName]
		,[UserEmail]
		,[PickupName])
	SELECT
		 B.[OrderNumber]
		,B.[DocumentNumber]
		,B.[PayTransNumber]
		,B.[Amount]
		,B.[Tax]
		,B.[State]
		,B.[FreightCode]
		,B.[IsApproved]
		,B.[OrderDate]
		,B.[FreightDate]
		,B.[FreightStarttime]
		,B.[FreightEndtime]
		,B.[UserName]
		,B.[UserEmail]
		,B.[PickupName]
	FROM (
		SELECT *
		FROM  dbo.vOrdersNotRetrieved
	)AS B;
END;
BEGIN
	UPDATE dbo.BusinessOrder
	SET IsRetrieved = 'yes'
	FROM BusinessOrder AS BO
		JOIN dbo.Orders AS O
		ON BO.DocumentNumber = O.DocumentNumber
	WHERE O.IsPayProcessed <> 1
	OR  O.IsPayProcessed IS NULL
	AND O.ID IN (
		SELECT MAX(OrderNumber_MaxID.ID)
		FROM dbo.Orders AS OrderNumber_MaxID
		GROUP BY OrderNumber_MaxID.DocumentNumber
	);
END;
GO

--# CREATE VIEW [dbo].[vOrdersNotRetrieved]
CREATE VIEW [dbo].[vOrdersNotRetrieved]
AS
WITH OrdersNotRetrieved AS
(
	SELECT *
	FROM  dbo.BusinessOrder AS B
	WHERE B.IsRetrieved IS NULL
	OR LTRIM(B.IsRetrieved) = ''
	OR LOWER(LTRIM( RTRIM(B.IsRetrieved) )) = '0'
	OR LOWER(LTRIM( RTRIM(B.IsRetrieved) )) = 'n'
	OR LOWER(LTRIM( RTRIM(B.IsRetrieved) )) = 'no'
)
SELECT * FROM OrdersNotRetrieved;
GO

# Init migration code first. Create DB by set environment var
- Set environment variable for user secrets:
[CODE-PS1]:
	$env:EMAILSENDERAPP_CONNECTSTRING 'Data Source=???;Initial Catalog=???;Integrated Security=True'
::
-- EF migrations commands:
--- dotnet ef migrations add [MyMigrateName] -c DbContext -o [MyMigrations/MigDir]
-- dotnet ef database update 